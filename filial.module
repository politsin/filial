<?php

/**
 * @file
 * Contains filial.module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\node\NodeInterface;
use Drupal\filial\Controller\NodeGrantsSet;
use Drupal\filial\Controller\NodeGrantsView;

/**
 * Implements hook_node_access_records().
 *
 * Установка пермишенов при сохранении ноды.
 */
function filial_node_access_records(NodeInterface $node) {
  $grants = NodeGrantsSet::init($grants, $node);
  return $grants;
}

/**
 * Implements hook_node_grants().
 *
 * Какие пары realm/grant (filial/gid) может просматривать пользователь
 * при доступе к вьюхе.
 */
function filial_node_grants($account, $op) {
  $grants = [];
  if ($op == 'view') {
    NodeGrantsView::view($grants, $account);
  }
  return $grants;
}


/**
 * Implements node_view_permissions_node_access().
 *
 * Решает можно ли показать ноду.
 */
function filial_node_access(NodeInterface $node, $op, $account) {
  /*
  $type = $node->bundle();
  $neutral = AccessResult::neutral('Можн');
  $forbidden = AccessResult::forbidden('Низя');
  $allowed = AccessResult::allowed()->cachePerUser();

  if ($type == 'calc') {
    switch ($op) {
      case 'create':
      case 'update':
      case 'delete':
        return $neutral;

      default:
        // dsm($allowed);
        return $neutral;
    }
  }*/
  return AccessResult::neutral();
}
